import ldap
import os
from dotenv import load_dotenv
from django_auth_ldap.config import LDAPSearch, GroupOfNamesType, NestedGroupOfNamesType, LDAPSearchUnion

load_dotenv()
"""
Django settings for EnjetITWiki project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth', #Authentication system
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'Wiki.apps.WikiConfig', #Main App
    'django.contrib.admin', #Django Default Admin Page
    'bootstrap5', #Bootstrap
    'ckeditor', #Adds rich text editor field
    'ckeditor_uploader', #uploader backend
    'axes', # Axes
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'axes.middleware.AxesMiddleware', # Axes
    'Wiki.img_sec_middleware.CheckUser'
]

ROOT_URLCONF = 'EnjetITWiki.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'EnjetITWiki.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = 'static/etc/'
MEDIA_ROOT= 'Wiki/documents/'
MEDIA_URL= 'Wiki/documents/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Limit Session Time

SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 900
SESSION_SAVE_EVERY_REQUEST = True

# LDAP AUTHORIZATION SETUP

X_FRAME_OPTIONS = 'ALLOWALL'

XS_SHARING_ALLOWED_METHODS = ['POST','GET','OPTIONS', 'PUT', 'DELETE']

AUTH_LDAP_SERVER_URI = 'ldap://10.2.10.5/'

AUTH_LDAP_START_TLS = True

AUTH_LDAP_BIND_DN = os.getenv('LDAP_USER_NAME')

AUTH_LDAP_BIND_PASSWORD = os.getenv('LDAP_USER_PASS')

#AUTH_LDAP_MIRROR_GROUPS = True

AUTH_LDAP_USER_SEARCH = LDAPSearch(
    os.getenv('LDAP_SEARCH_USER'),
    ldap.SCOPE_SUBTREE,
    '(sAMAccountName=%(user)s)',
)

AUTH_LDAP_GROUP_SEARCH = LDAPSearchUnion(
    LDAPSearch(
        os.getenv('LDAP_SEARCH_GROUPS_A'),
        ldap.SCOPE_SUBTREE,
        '(objectClass=group)'
    ),
    LDAPSearch(
        os.getenv('LDAP_SEARCH_GROUPS_B'),
        ldap.SCOPE_SUBTREE,
        '(objectClass=group)'
    )
)

#AUTH_LDAP_GROUP_TYPE = PosixGroupType(name_attr="cn")
AUTH_LDAP_GROUP_TYPE = GroupOfNamesType(name_attr='cn')

# Simple group restrictions
AUTH_LDAP_REQUIRE_GROUP=os.getenv('AUTH_LDAP_REQUIRE_GROUP')
#AUTH_LDAP_DENY_GROUP = 'cn=disabled,ou=django,ou=groups,dc=example,dc=com'

# Populate the Django user from the LDAP directory.
AUTH_LDAP_USER_ATTR_MAP = {
    'first_name': 'givenName',
    'last_name': 'sn',
    'email': 'mail',
}

AUTH_LDAP_PROFILE_ATTR_MAP = {
        "home_directory": "homeDirectory"
}

AUTH_LDAP_USER_FLAGS_BY_GROUP = {
    'is_active': os.getenv('LDAP_ACTIVE'),
    'is_staff': os.getenv('LDAP_STAFF'),
    'is_superuser': os.getenv('LDAP_SUPERUSER'),
}

AUTH_LDAP_MIRROR_GROUPS ={
    os.getenv("LDAP_GROUP_A"),
    os.getenv("LDAP_GROUP_B"),
    os.getenv("LDAP_GROUP_C")
}

# This is the default, but I like to be explicit.
AUTH_LDAP_ALWAYS_UPDATE_USER = True

# Use LDAP group membership to calculate group permissions.
AUTH_LDAP_FIND_GROUP_PERMS = True

# Cache distinguished names and group memberships for an hour to minimize
# LDAP traffic.
AUTH_LDAP_CACHE_GROUPS = True
AUTH_LDAP_GROUP_CACHE_TIMEOUT = 3600
AUTH_LDAP_GLOBAL_OPTIONS = {
    ldap.OPT_X_TLS_REQUIRE_CERT: False,
    ldap.OPT_REFERRALS: False,
}

# Keep ModelBackend around for per-user permissions and maybe a local
# superuser.
AUTHENTICATION_BACKENDS = (
    'axes.backends.AxesBackend', #Axes, limits login attempts
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
)

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {"console": {"class": "logging.StreamHandler"}},
    "loggers": {"django_auth_ldap": {"level": "DEBUG", "handlers": ["console"]}},
}

############################################
############# Axes Setup ###################
############################################
############################################

AXES_FAILURE_LIMIT: 3
AXES_COOLOFF_TIME: 1
AXES_RESET_ON_SUCCESS = True


############################################
############## RTF SETUP ###################
############################################
############################################
CKEDITOR_FORCE_JPEG_COMPRESSION = True
CKEDITOR_ALLOW_NONIMAGE_FILES = False
CKEDITOR_UPLOAD_PATH = "ck_uploads/"
CKEDITOR_FILENAME_GENERATOR = 'Wiki.utils.get_filename'
CKEDITOR_IMAGE_BACKEND = 'pillow'
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 500,
        'width': '100%',
    },
}